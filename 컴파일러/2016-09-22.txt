초반에 문제 풀었음
정규문법
정규언어
Finite Automata  <-
정규식(정규표현) <- 이거 두개를 할거임

(0+1)^x
집합얘기할때 +는 합집함임 또는
(ba)^xa
b뒤에 a나오는 ba가x번나오고 a로 끝나는
정규식에 사용되는 메타문자(몇개안됨)
+ : 또는
· : 스트링 결합(string concatenation)
( ) : 괄호 연산자
* : 윗첨자 Kleene closure, 0번 이상 반복
+ : 윗첨자 dagger, 1번 이상 반복
이거이외에 -부호를 쓴다거나 하면 안됨 오직 위에거들만 써야함
정규식 예제
l = letter
l(l+d)^* => ('A' + 'B' + 26개 다썼다 치고 + 'Z' + 'a' + 26개 다썻다 치고 + 'z' + '.')
	    '0' + '1' + 다썼다 치고 + '9'
+는 또는 이라는 뜻

A->Aba|a
A=Aba+a

정규문법으로부터 정규식을 만들려고함
2x+y = 3
x-3y = 7
a(ba)^*
예를들어
S → a | b | aX | bX
X → a | b
위에껀 정규문법
X = a + b 을 S에 대입
S = a + b + aX + bX
= a + b + a(a+b) + b(a+b)
= a + b + aa +ab + ba + bb
이게 정규식
이건 유한언어라 계속나열한거 그런데 이런경우 거의 없음
우리는 무한언어를 알아야함
무한언어에는 ^*이나 ^+가 있을 수 밖에 없음
무한언어에는 순환규칙을 씀