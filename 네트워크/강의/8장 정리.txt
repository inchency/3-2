종단점인증이란 - 하나의 통신 개체가 다른 개체에게 자신의 신원을 컴퓨터 네트워크 상으로 증명하는 작업이다.
서로 만나서 얼굴을 확인 하거나 전화상으로 목소리를 들어 확인하는 방법이 이에 해당할 수 있다. 하지만 네트워크상에서
이러한 방법은 거의 불가능하다. 대개 인증은 교환된 메세지와 데이터만을 기반으로 수행되어야한다.
인증프로토콜 ap1.0
가장 간단한 방법으로 단순히 메세지만 보내는 방법. 트루디가 구라로 자기 앨리스라고 할 수 있는 문제가 있음.
인증프로토콜 ap2.0
자신의 IP를 실어 보내는 방법. 하지만 이 역시 허접들은 걸러내지만 중수이상은 IP스푸핑을 이용해 마치 앨리스 IP인것처럼
해서 보내서 속일 수 있음.
인증프로토콜 ap3.0
고전적인 방법인 비밀번호를 사용하는 것이다. 인증자와 인증받는 사람간에 공유되는 비밀이다.
 하지만 이 역시 도청당해서 비밀번호를 유출당하면 위험하다.
인증프로토콜 ap3.1 
비밀번호를 암호화해서 보내는 것이다. 하는 것이다. 그래서 트루디가 앨리스 비밀번호를 알아내는 것을 막을 수 있다.
앨리스가 밥에게 암호화된 비번을 보내면 밥은 비밀번호를 복호ㅎ해 비밀번호가 옳으면 앨리스를 인증한다.
밥은 앨리스가 그녀의 비밀번호와 그것을 암호화하는데 필요한 공유 비밀키를 알고있기 떄문에 인증할수 있다.
실제로 트루디가 비밀번호를 알아내는것은 막을수 있다. 하지만 이 기술 사용이 인증문제를 해결하진 못한다. 밥은 재생공격에
노출되어 있다. 트루디가 앨리스의 통신을 도청해 암호화된 비밀번호를 저장했다 나중에 엘리스인 것처럼 밥에게 비밀번호의
암호화된 버전을 보내준다. 결국 3.0과 비밀번호만 알지 못했다 뿐이지 똑같은 결과이다.
인증프로토콜 ap4.0
3.1의 문제는 밥이 앨리스와 통신이 실제로 엘리스인지 아니면 엘리스 인증요청을 재생한 것을 받고 트루디가 구라친건지
알수없기 때문에 생긴 것이다. 이를 해결하기 위해 TCP 핸드셰이크 프로토콜이 사용된다. 넌스라는 숫자를 사용(프로토콜이
평생 단 한번 사용되는 숫자를 말함)
나는 앨리스다->밥은 넌스R을 엘리스에게 보냄->넌스를 암호화해 밥에게 보냄 -> 밥은 암호화된 넌스를 받고 엘리스임을 확인
-> 밥은 자신이 받은 메세지를 복호화한다. 이 복화화한 넌스가 자신이 앨리스에게 보낸 것과 같다면 앨리스를 인증한다.

앨리스는 밥의 공개키를 이용해 암호화 할 수 있고 자신의 개인키를 이용해 암호화 할 수 있음.
자신의 개인키를 이용한 것은 자신만이 암호화 할 수 있지만 아무나 풀 수 있음. 밥의 공개키를 이용해 암호화하는건 누구나 암호화 가능하나 밥만이 풀 수 있음
밥도 앨리스의 공개키를 이용해 암호화를 하고 자신의 개인키를 이용해 암호화 한다.
이때의 문제 앨리스에게는 밥의 공개키가 필요하고 밥에게는 앨리스의 공개키가 필요하다 (암호화하기 위해서)
만약 트루디가 자신의 공개키를 밥의 공개키로 뻥치고 엘리스에게 보내면 엘리스는 이걸 암호화해서 트루디에게 보내면 트루디는 자신의 비밀키로 메세지를 스틸할 수 있다.
안전하게 공개키를 배포하는 가장 일반적인 방벙븐 CA를 통해 공개키를 인증 받는 것이다.

SSL (secure sockets layer)
https: -> 브라우저가 SLL 사용중
기밀성, 데이터무결성, 종단점 인증 등의 보안 서비스의 향상된 TCP 버전을 일컫는다
응용 계층에 존재하며 보안서비스로 강화된 TCP 서비스를 제공하는 전송 프로토콜이다.
almost-ssl (SSL의 단순화된 버전)
핸드셰이크, 키유도, 데이터전송 3단계로 되어있음
밥은 엘리스와 TCP연결을 하고, 진짜 엘리스인지 확인하고, SSL 세션에 필요한 모든 대칭키들을 생성하기 위해 엘리스와 밥이 사용할 주 비밀키를 엘리스에게 전송한다.
클라이언트(밥)이 TCP SYN를 보냄, 서버(엘리스가)가 TCP/SYNACK 보냄, 클라 TCP ACK 보냄 이러면 엘리스임을 확인함
클라가 hello 보냄, 서버가 자신의 공개키가 담긴 인증서를 클라에게 보냄, 클라는 MS를 생성하고 서버의 공개키로 MS를 암호화한 EMS를 서버에게 보냄. 서버는 EMS를 자신의 개인키를 사용해 복호화해서 MS를 얻음.
밥과 앨리스 둘다 SSL의 MS를 알게 됨(다른사람들은모름)

IPsec
네트워크 계층의 보안을 제공한다. 호스트 또는 라우터와 같은 네트워크 계층의 어떤 두 개체 사이에서
IP 데이터그램을 보호한다. 이 네트워크 계층 보안 프로토콜은 기밀성, 무결성을 제공 할 수 있다.
VPN(가상사설망) 그림 그릴줄 알아야함.
AH와 ESP 프로토콜이 있음
AH 프로토콜은 출발지 인증과 데이터 무결성을 제공하지만 기밀성은 제공하지 않음.
ESP 프로토콜은 출발지인증, 데이터무결성, 기밀성을 제공한다.(훨씬 널리 사용됨)
Security Associations - SA
IPsec 데이터 그램을 전송하기 위해 출발지 개체와 목적지 개체는 네트워크 계층에서 논리적 연결을 설립하는데
이논리적 연결이 SA이다. 단방향 연결이다.

WEP (Wired Equivalent Privacy)
무선네트워크에서도 유선네트워크 보안 수준을 제공하는 것을 의미.
대칭고유키 기법을 이용해 호스트와 무선액세스포인트(기지국) 사이의 인증과 데이터 암호화를 제공하기 위해 설계됨.
무선호스트가 액세스포인터에게 인증을 요구-> 액세스포인터는 128바이트의 넌스값으로 인증요구에응답
->무선호스트는 액세스포인트와 공유하는 대칭키를 이용해 넌스를 암호화->액세스포인터는 이 넌스를 복호화
일치하면 인증성공